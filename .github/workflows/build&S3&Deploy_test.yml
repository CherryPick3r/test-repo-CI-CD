# This is a basic workflow to help you get started with Actions

name: build test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "release" branch
  push:
    branches: [ "release" ]
  pull_request:
    branches: [ "release" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  AWS_REGION: ${{secrets.AWS_REGION}}
  S3_BUCKET_NAME: ${{secrets.S3_BUCKET_NAME}}
  CODE_DEPLOY_APPLICATION_NAME: ${{secrets.CODE_DEPLOY_APPLICATION_NAME}}
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: ${{secrets.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME}}
  APPILICATION_YAML_PATH: ./src/main/resources/application.yaml
  test: test_for_yaml_set
  
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: set up jdk 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          
          
      - name: Set Yaml
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.APPILICATION_YAML_PATH }}
        env:
          spring.datasource.url: ${{ secrets.DATASOURCE_URL }}
          spring.datasource.username: ${{secrets.DATASOURCE_USERNAME}}
          spring.datasource.password: ${{secrets.DATASOURCE_PASSWORD}}
          client.id.kakao: ${{secrets.CLIENT_ID_KAKAO}}
          client.id.google: ${{secrets.CLEINT_ID_GOOGLE}}
          redirect.uri.kakao: ${{secrets.REDIRECT_URI_KAKAO}}
          redirect.uri.google: ${{secrets.REDIRECT_URI_GOOGLE}}
          secret.google: ${{secrets.SECRET_GOOGLE}}
          
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash
        
      - name: Build with Gradle
        run : ./gradlew build
        shell: bash

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{env.AWS_REGION}}
      
      - name: Upload to AWS S3
        run: aws s3 cp --region ${{env.AWS_REGION}} ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip 
        
      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{env.CODE_DEPLOY_APPLICATION_NAME}} \
          --deployment-group-name ${{env. CODE_DEPLOY_DEPLOYMENT_GROUP_NAME}} \
          --se-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHQ.zip
          
 
